/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import com.opencsv.CSVReader;
import com.opencsv.CSVWriter;
import com.opencsv.exceptions.CsvValidationException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tahsin Mubarak
 */
public class EditContact extends javax.swing.JFrame {
static int k = 0;
    static int a = 0;
    static String[][] s = new String[135][3];
    static String[][] s1 = new String[135][3];
    static String[][] Convert = new String[135][3];
    String filePath;
    String path;
    /**
     * Creates new form EditContact
     */
    public EditContact() {
        initComponents();
                CSVReader reader = null;
        String[] arr1;
        filePath = new File("").getAbsolutePath();
        path=filePath+"\\src\\contact.csv";
        try {
            reader = new CSVReader(new FileReader(path));
            while((arr1=reader.readNext())!=null){
                for(int i=0;i< arr1.length;i++){

                    s[k][i]=arr1[i];

                }
                k++;
            }
        } catch(FileNotFoundException fileNotFoundException) {
            fileNotFoundException.printStackTrace();
        }catch (IOException ioException){
            ioException.printStackTrace();
        }catch (CsvValidationException csvValidationException){
            csvValidationException.printStackTrace();
        }

   
        k=0;
        jTable1.setModel(new DefaultTableModel(
                s,
                new String[]{"Airline","Telephone Number","Phone Number"}
        ));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Airline", "Telephone Number", "Phone Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edit Contacts");

        jButton1.setText("Edit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete All");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 0, 0));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Exit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
a = imp();
                if (a == 0) {
                    JOptionPane.showMessageDialog(null, "nothing changed");
                } else {
                    JOptionPane.showMessageDialog(null, "changes saved");
                }
                jTable1.getSelectionModel().clearSelection();// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "Are You Sure?", "Delete", JOptionPane.YES_NO_OPTION);
                System.out.println(option);
                if (option == 0) {
                    for (int i = 0; i < jTable1.getRowCount(); i++)
                        for (int j = 0; j < jTable1.getColumnCount(); j++)
                            jTable1.setValueAt(" ", i, j);
                    for (int i = 0; i < jTable1.getRowCount(); i++)
                        for (int j = 0; i <jTable1.getColumnCount(); i++) {

                            s1[i][j] = (String) jTable1.getValueAt(i, j);

                        }
                    CSVWriter writer = null;
                    String[] arr = new String[3];
                    try {
                        writer = new CSVWriter(new FileWriter(path));

                        for (int i = 0; i < jTable1.getRowCount(); i++) {
                            for (int j = 0; j < jTable1.getColumnCount(); j++) {
                                arr[j] = s1[i][j];
                            }
                            writer.writeNext(arr);
                            writer.flush();
                        }
                    } catch (IOException ioException) {
                        ioException.printStackTrace();
                    }

                } else {

                }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Delete_Row_ActionPerformed();
        jTable1.getSelectionModel().clearSelection();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditContact().setVisible(true);
            }
        });
    }
    private int imp() {
        for (int i = 0; i < jTable1.getRowCount(); i++)
            for (int j = 0; j < jTable1.getColumnCount(); j++) {

                s1[i][j] = (String) jTable1.getValueAt(i, j);
                


            }
        CSVWriter writer = null;
        String[] arr = new String[3];
        try {
            writer = new CSVWriter(new FileWriter(path));

            for (int i = 0; i < jTable1.getRowCount(); i++) {
                for (int j = 0; j < jTable1.getColumnCount(); j++) {
                    arr[j] = s1[i][j];
                }
                writer.writeNext(arr);
                writer.flush();
            }
        } catch (IOException ioException) {
            ioException.printStackTrace();
        }
        int flag = 0;
        for (int i = 0; i < jTable1.getRowCount(); i++)
            for (int j = 0; j < jTable1.getColumnCount(); j++) {
                if (s[i][j] != s1[i][j]) {
                    flag = 1;
                    break;
                }
            }

        if (flag == 0) return 0;
        else return 1;

    }
        private void Delete_Row_ActionPerformed() {
        String[][] delete = new String[136][3];
        int[] selection = jTable1.getSelectedRows();
        int select = jTable1.getSelectedRow();
        if (select == -1) {
            JOptionPane.showMessageDialog(null, "Nothing Selected");
        } else {
            for (int i = 0; i < jTable1.getRowCount(); i++)
                for (int j = 0; j < jTable1.getColumnCount(); j++) {

                    s1[i][j] = (String) jTable1.getValueAt(i, j);

                    delete[i][j] = s1[i][j];

                }

            for (int A = 0; A < selection.length; A++) {
                for (int B = selection[A]; B < jTable1.getRowCount(); B++) {
                    for (int C = 0; C < 3; C++) {
                        delete[B - A][C] = delete[B + 1 - A][C];
                    }
                }
            }
            for (int i = 0; i < 135; i++)
                for (int j = 0; j < 3; j++)
                    Convert[i][j] = delete[i][j];
            for (int i = 0; i < jTable1.getRowCount(); i++)
                for (int j = 0; j < jTable1.getColumnCount(); j++)
                    jTable1.setValueAt(Convert[i][j], i, j);
            CSVWriter writer = null;
            String[] arr = new String[3];
            try {
                writer = new CSVWriter(new FileWriter(path));

                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    for (int j = 0; j < jTable1.getColumnCount(); j++) {
                        arr[j] = Convert[i][j];
                    }
                    writer.writeNext(arr);
                    writer.flush();
                }
            } catch (IOException ioException) {
                ioException.printStackTrace();
            }
            if(selection.length==1)
            JOptionPane.showMessageDialog(null, selection.length+"item Deleted");
            else
             JOptionPane.showMessageDialog(null, selection.length+" items Deleted");   
        }
    }
    javax.swing.JPanel getpanel()
        {return  jPanel1;}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
